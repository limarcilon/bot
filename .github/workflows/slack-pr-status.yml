name: Notify Slack on Pull Request Events

on:
  pull_request:
    types: [opened, closed, edited, reopened, synchronize]

jobs:
  slack-notification:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          ACTION=${{ github.event.action }}
          TITLE="${{ github.event.pull_request.title }}"
          URL="${{ github.event.pull_request.html_url }}"
          ACTOR="${{ github.actor }}"
          
          # Define a reaction emoji based on the action
          if [ "$ACTION" == "opened" ]; then
            EMOJI="eyes" # Reaction when PR is opened
          elif [ "$ACTION" == "closed" ]; then
            EMOJI="white_check_mark" # Reaction when PR is closed
          elif [ "$ACTION" == "reopened" ]; then
            EMOJI="arrows_clockwise" # Reaction when PR is reopened
          elif [ "$ACTION" == "edited" ]; then
            EMOJI="pencil2" # Reaction when PR is edited
          elif [ "$ACTION" == "synchronize" ]; then
            EMOJI="repeat" # Reaction when PR is synchronized
          fi

          # Install jq for JSON parsing
          sudo apt-get update && sudo apt-get install -y jq

          # Load timestamp if it exists
          TIMESTAMP_FILE=".slack_timestamp"
          if [ -f "$TIMESTAMP_FILE" ]; then
            TIMESTAMP=$(cat "$TIMESTAMP_FILE")
          fi

          # If the PR is opened, send a new message and save its timestamp
          if [ "$ACTION" == "opened" ]; then
            RESPONSE=$(curl -s -X POST -H "Authorization: Bearer $SLACK_WEBHOOK_URL" \
              -H 'Content-type: application/json' \
              --data '{
                "channel": "#bot",
                "text": "Pull Request Opened: *'"$TITLE"'*\nBy: '"$ACTOR"'\nURL: '"$URL"'"
              }' https://slack.com/api/chat.postMessage)
            echo "$RESPONSE" | jq -r '.ts' > "$TIMESTAMP_FILE"

          # Otherwise, add a reaction to the original message
          else
            if [ ! -z "$TIMESTAMP" ]; then
              curl -s -X POST -H "Authorization: Bearer $SLACK_WEBHOOK_URL" \
                -H 'Content-type: application/json' \
                --data '{
                  "channel": "#bot",
                  "timestamp": "'"$TIMESTAMP"'",
                  "name": "'"$EMOJI"'"
                }' https://slack.com/api/reactions.add
            fi
          fi
